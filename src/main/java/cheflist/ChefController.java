package cheflist;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
//import org.springframework.web.bind.annotation.ResponsegreetingBody;

import cheflist.Chef;
import cheflist.chefRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)

public class ChefController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private chefRepository chefRepository;

	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewChef (@RequestParam String name
			, @RequestParam String food){
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

				
	    Chef c = new Chef();
		c.setName(name);
		c.setFood(food);
		chefRepository.save(c);
		
		return "ChefInput";
		
	}
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<Chef> getAllChefs() {
		// This returns a JSON or XML with the users
		return chefRepository.findAll();
	}
	
}
	
	